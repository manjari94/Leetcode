// class Solution {
//     public int numSplits(String s) {
//         HashMap<Character,Integer> l=new HashMap<>();
//         HashMap<Character,Integer> r=new HashMap<>();
//         for(int i=0;i<s.length();i++)
//             r.put(s.charAt(i),r.getOrDefault(s.charAt(i),0)+1);
//             System.out.println(r);
//         int msum=0;
//         int res=0;
//         for(int i=0;i<s.length();i++){
//             char ch=s.charAt(i);   
//             l.put(ch,l.getOrDefault(ch,0)+1);
//             if(r.get(ch)<=1)
//                r.remove(ch);
//             else
//                r.put(ch,r.get(ch)-1);
//             if((l.size()+r.size()>msum))
//                msum = l.size()+r.size(); 
//         }
//         return msum;
//     }
// }
// class Solution {
// 	public void numSplits(int[] A){
// 		//if(A[1]==1 && A.length==1) break;
// 		HashMap<Integer,Integer> idx=new HashMap<>();
// 		for(int i=0;i<A.length;i++){
// 			idx.put(A[i],i);
// 		}
// 		TreeMap<Integer, Integer> sorted = new TreeMap<>();
// 		sorted.putAll(idx);
// 		System.out.println(sorted);
// 	}
// 	public static void main (String[] args) throws java.lang.Exception
// 	{
// 		int[] A;
// 		A = new int[] {4,2,1,3};
// 	}
// }
